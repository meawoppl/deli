/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package deli;

import deli.transforms.Scale;
import deli.transforms.Translate;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import me.tongfei.progressbar.ProgressBar;
import me.tongfei.progressbar.ProgressBarBuilder;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

public class App {
  public static void main(String[] args) {
    StlReader reader = new StlReader(new File(args[0]));
    TriangleSoup soup = new TriangleSoup(reader.getTriangles());
    TriangleSoup moved =
        soup.transform(Scale.by(49)).transform(Translate.by(new Vector3D(50, 50, 50)));

    Intersecter intersecter = new Intersecter(moved);
    List<Integer> slices = IntStream.range(0, 100).boxed().collect(Collectors.toList());

    ProgressBarBuilder pbb = new ProgressBarBuilder();
    pbb.setUpdateIntervalMillis(50);

    for (Integer z : ProgressBar.wrap(slices, pbb)) {
      BufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_3BYTE_BGR);
      intersecter.drawPlaneIntersection(image.createGraphics(), z);
      ImageFuncs.writeImage(image, String.format("testimg/test_%03d.png", z));
    }

    System.out.println(
        String.format(
            "Loaded %d triangle with range %s", reader.getNTriangles(), moved.getBounds()));
  }
}
